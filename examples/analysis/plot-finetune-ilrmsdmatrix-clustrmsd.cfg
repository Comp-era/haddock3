# ====================================================================
# RMSD matrix + clustering example
# `rmsdmatrix`: compute all pair-wise RMSD between all structures
# `clustrmsd`: cluster structures based on the last computed rmsdmatrix.
# `seletopclusts`: with default parameters to send all clustered structures to the next stage.
# `rmsdmatrix`: re-compute all pair-wise RMSD between remaining structures.
# `clustrmsd`: cluster structures based on the latest computed rmsdmatrix.
#
# NOTE: Have a look at the generated `rmsd_matrix.html` in the 
#  clustrmsd modules, it can allow you to visualize all the pair-wise
#  distances and better set the appropriate parameters for clustering.
# ====================================================================
# Define global parameters
# ====================================================================
# directory in which the scoring will be done
run_dir = "finetune-ilrmsdclusering-withplots-test"

# compute mode
mode = "local"
ncores = 10

# ensemble to be analysed
molecules = "./data/ensemble_4G6M.pdb"

# ====================================================================
# Parameters for each stage are defined below, prefer full paths
# ====================================================================
# Generate topologies for each structure in the ensemble
[topoaa]

[ilrmsdmatrix]
# Cluster based on RMSDistance
[clustrmsd]
criterion = "distance"  # Use RMSD distances to cluster structures.
clust_cutoff = 1  # Minimum distance to cluster two entries together
min_population = 1  # Even singlotons will be `clustered`
plot_matrix = true  # Plot the corresponding matrix

# Generate rmsd matrix with current order of models
[ilrmsdmatrix]
# Cluster based on RMSD
[clustrmsd]
criterion = "distance"  # Use RMSD distances to cluster structures.
clust_cutoff = 7.5  # Minimum distance to cluster two entries together
min_population = 2  # A minimum of 2 members required to form a cluster
plot_matrix = true  # Plot the corresponding matrix

# Select best clusters
[seletopclusts]

# Re-Generate second rmsd matrix with only selected models
[ilrmsdmatrix]
# Re-clusters based on number of final clusters with `maxclust` criterion
[clustrmsd]
criterion = "maxclust"  # Use maximum number of cluster to create clusters
n_clusters = 3  # Number of wished clusters
min_population = 1  # Even singlotons will be `clustered`
plot_matrix = true  # Plot the corresponding matrix

# Evaluate models with CAPRI metrics using PDB complex as reference.
[caprieval]
reference_fname = "./data/target.pdb"

# ====================================================================
